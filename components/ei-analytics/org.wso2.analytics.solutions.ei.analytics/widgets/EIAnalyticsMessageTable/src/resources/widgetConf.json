{
  "name": "EI Analytics Message Table",
  "id": "EIAnalyticsMessageTable",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": [
        "subscriber"
      ]
    },
    "providerConfig": {
      "configs" : {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@store(type='rdbms', datasource='EI_ANALYTICS', field.length=\"contextPropertyMap:5000,beforePayload:5000,afterPayload:5000,transportPropertyMap:5000\") @Index('METATENANTID','MESSAGEFLOWID','HOST','HASHCODE','COMPONENTNAME','COMPONENTTYPE','COMPONENTINDEX','COMPONENTID','STARTTIME','ENDTIME','ENTRYPOINT','ENTRYPOINTHASHCODE','FAULTCOUNT') define table ESBEVENTTABLE(METATENANTID int, MESSAGEFLOWID string, HOST string, HASHCODE string, COMPONENTNAME string, COMPONENTTYPE string, COMPONENTINDEX int, COMPONENTID string, STARTTIME long, ENDTIME long, DURATION long, BEFOREPAYLOAD string, AFTERPAYLOAD string, CONTEXTPROPERTYMAP string, TRANSPORTPROPERTYMAP string, CHILDREN string, ENTRYPOINT string, ENTRYPOINGHASHCODE string, FAULTCOUNT int, EVENTTIMESTAMP long);",
          "queryData": {
            "query": "from ESBEVENTTABLE on startTime>={{timeFrom}}L and startTime<{{timeTo}}L and metaTenantId=={{metaTenantId}} and componentType=='{{componentType}}' and {{componentIdentifier}}=='{{componentName}}' select messageFlowId,host,startTime, ifThenElse(faultCount>0,'Failed','Success') as faultCount order by startTime desc limit 100"
          },
          "publishingInterval": 60
        }
      }
    },
    "options": [
      {
        "id": "headerTitle",
        "title": "Widget Display Name",
        "type": {
          "name": "TEXT",
          "possibleValues": []
        },
        "defaultValue": "EI Analytics Message Table"
      }
    ]
  }
}
